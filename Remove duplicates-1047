//approach 
// we will take a stack and push element
//if the top of stack is not equal to ith element of string then push
//if the top of stack is equal to ith element of string then pop
import java.util.Stack;

class Solution {
    public String removeDuplicates(String s) {
        Stack<Character> st = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            char curr = s.charAt(i);

            // if stack not empty and top equals curr, remove duplicate
            if (!st.isEmpty() && st.peek() == curr) {
                st.pop();
            } else {
                st.push(curr);
            }
        }

        // Build the final string from stack
        StringBuilder sb = new StringBuilder();
        for (char ch : st) {
            sb.append(ch);
        }
        return sb.toString();
    }
}
